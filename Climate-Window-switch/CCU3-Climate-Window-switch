blueprint:
  name: Window Open with switch, Notify HomeMatic CCU - with close Delay
  description:
    An automation blueprint that reduces the set temperature of your climate
    device or group.

  domain: automation

  input:
    window_entity:
      name: Window Sensor
      description: The window sensor that will control the climate entity.
      selector:
        entity:
          domain: swicth

    open_delay:
      name: Windows Open Wait Time
      description: Time to delay after window opens before notifying HomeMatic.
      default: 30
      selector:
        number:
          min: 0.0
          max: 600.0
          unit_of_measurement: seconds
          mode: slider
          step: 1.0

    close_delay:
      name: Windows Close Wait Time
      description: Time to delay after window closed before notifying HomeMatic.
      default: 30
      selector:
        number:
          min: 0.0
          max: 1200.0
          unit_of_measurement: seconds
          mode: slider
          step: 1.0

    blocking_entity:
      name: (OPTIONAL) Blocking Entity
      description: If this entity's state is on, it will prevent the automation from running. E.g. summer mode or away mode.
      default:
      selector:
        entity:
          domain: input_boolean

    climate_entity:
      name: Climate Device
      description: The climate entity that is controlled by the window sensor.
      selector:
        entity:
          domain: climate

  source_url: https://raw.githubusercontent.com/BiasF/HASS-Blueprints/main/Climate-Window/CCU3-Climate-Window-with-delay

variables:
  blocking_entity: !input blocking_entity
  climate_target: !input climate_entity
  climate_id: '{{ state_attr( climate_target, "id") }}'
  open_delay: !input open_delay
  close_delay: !input close_delay

trigger:
  - platform: state
    entity_id: !input "window_entity"
    to: "on"
    for: !input "open_delay"

condition:
  - condition: template
    value_template: "{{ (blocking_entity == none) or (states[blocking_entity].state == 'off') }}"

action:
  - service: homematic.set_device_value
    data:
      address: "{{ climate_id }}"
      channel: 1
      param: "WINDOW_STATE"
      value: 1

  - wait_for_trigger:
      - platform: state
        entity_id: !input "window_entity"
        to: "off"
        for: !input "close_delay"
    continue_on_timeout: false

  - service: homematic.set_device_value
    data:
      address: "{{ climate_id }}"
      channel: 1
      param: "WINDOW_STATE"
      value: 0

mode: restart
max_exceeded: silent
